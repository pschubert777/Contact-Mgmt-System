@page "/addcontact"

@using CMS.Data
@using CMS.DB
@using CMS.FormModels
@inject NavigationManager NavigationManager
@inject ContactService ContactService



<h1>Add a Contact </h1>

<div class="container">
    <EditForm Model="@newContactForm" OnValidSubmit="@submitHandler">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>First Name: </label>
            <InputText id="firstName" @bind-Value="newContactForm.FirstName" class="form-control" />
        </div>
        <div class="form-group">
            <label>Last Name: </label>
            <InputText id="lastName" @bind-Value="newContactForm.LastName" class="form-control" />
        </div>
        <div class="form-group">
            <label>Birth Date: </label>
            <InputDate id="birthDate" @bind-Value="newContactForm.BirthDate" class="form-control" />
        </div>
        <div class="form-group">
            <label>Phone Number: </label>
            <InputText id="phoneNumber" @bind-Value="newContactForm.PhoneNumber" class="form-control" />

        </div>
        <div class="text-right">
            <button type="button" class="btn btn-primary" @onclick="@cancelHandler">Cancel</button>
            <button type="submit" class="btn btn-success">Submit</button>
        </div>



    </EditForm>
</div>

@code {
    private ContactModel newContactForm = new ContactModel();


    private void cancelHandler()
    {
        NavigationManager.NavigateTo("");
    }
    private async void submitHandler()
    {
        Contact newContact = new Contact();
        newContact.LastName = newContactForm.LastName;
        newContact.FirstName = newContactForm.FirstName;
        newContact.PhoneNumber = newContactForm.PhoneNumber;
        newContact.BirthDate = newContactForm.BirthDate;


        await Task.Run(() => ContactService.AddContact(newContact));

        NavigationManager.NavigateTo("");
    }
}
